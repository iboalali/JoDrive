@{
    if ( Session["userID"] == null ) {
        var pageName = Request.Url.ToString().Substring( Request.Url.ToString().LastIndexOf( '/' ) + 1 );

        Response.Redirect( "~/?ReturnURL=" + pageName );
    }

    Validation.RequireField( "groupName", "Required field" );

    var db = Database.Open( "GP" );

    var s_groupName = Request.Form["groupName"];
    var s_groupDescription = Request.Form["groupDescription"];
    int s_groupID;


    if ( IsPost ) {

        int userID = ( int ) Session["userID"];

        var sqlSelect = "Select * from rc_groups";

        var data = db.Query( sqlSelect );
        Random random = new Random();
        bool found = false;
        while ( true ) {
            s_groupID = random.Next();

            foreach ( var item in data ) {
                        if ( item.groupID == s_groupID ) {
                            found = true;
                            break;
                        }
                    }
                    if(found){
                        continue;
                    }

            break;
        }

        sqlSelect = "INSERT INTO rc_groups(groupName, ownerID, groupID, description, date)"
                  + "VALUES ( @0, @1, @2, @3, @4 )";
        //sqlSelect = "INSERT INTO rc_groups "
        //            + "SELECT groupName, owner, groupID, description"
        //            + "WHERE groupName=@0 and owner=@1 and groupID=@2 and description=@3";

        db.Execute( sqlSelect, s_groupName, userID, s_groupID, s_groupDescription,
        //DateTime.Now);
        String.Format(System.Globalization.DateTimeFormatInfo.InvariantInfo, "{0:G}", DateTime.Now ) );

        //DateTime.Now.Month + "/" + DateTime.Now.Day + "/" + DateTime.Now.Year + " " 
        //+  DateTime.Now.Hour + ":" + DateTime.Now.Minute + ":" + DateTime.Now.Second + " ");

        sqlSelect = "INSERT INTO rc_UserGroups(groupID, userID)"
                  + "VALUES ( @0, @1 )";
        //sqlSelect = "INSERT INTO rc_UserGroups where groupID=@0 and userName=@1";
        db.Execute( sqlSelect, s_groupID, userID );

        var root = Server.MapPath( "/" );
        var foldername =  "uploadedFiles/" + s_groupID.ToString();
        var path = root + foldername;
        if ( !Directory.Exists( path ) ) {
            Directory.CreateDirectory( path );
        }



        Response.Redirect( "~/files?id=" + s_groupID.ToString() );
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>Create Group</title>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.js"></script>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.3/jquery-ui.js"></script>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.js"></script>
    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.js"></script>
    <link type="text/css" rel="Stylesheet" href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.10.3/themes/black-tie/jquery-ui.css" />
    <link type="text/css" rel="Stylesheet" href="~/rcLayouts/default/css/popupStyle.css" />

</head>
<body>
    <form action="" method="post">
        <p>
            <label for="groupName">Group Name</label><br>
            <input type="text" name="groupName" @Validation.For( "groupName" ) id="groupName"> @Html.ValidationMessage( "groupName" )
        </p>

        <p>
            <label for="groupName">Group Description</label><br>
            <input type="text" name="groupDescription" @Validation.For( "groupDescription" ) id="groupName"> <em style="padding-left: 1em">Optional</em>
        </p>

        <p>
            <input type="submit" name="btn" value=" Create ">
        </p>
    </form>
</body>
</html>